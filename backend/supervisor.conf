[unix_http_server]
file=/var/run/supervisor.sock   ; (path to supervisor.sock file)
chmod=0700                       ; sockef file mode (default 0700)
;chown=nobody:nogroup             ; sockef file owner (default root)
;username=user                    ; (default is no username (open server))
;password=123                     ; (default is no password (open server))

[supervisord]
logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
childlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)
nodaemon=true                   ; (start in foreground if true;default false)
minfds=1024                     ; (min. avail startup file descriptors;default 1024)
minprocs=200                    ; (min. avail process descriptors;default 200)
user=appuser                    ; Run supervisord as appuser to ensure child processes inherit this user if not specified

; the below section must be named GPerfvisord related options
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket
;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
;username=chris              ; should be same as in [*_http_server] if set
;password=123                ; should be same as in [*_http_server] if set
;prompt=mysupervisor         ; cmd line prompt (default "supervisor")
;history_file=~/.sc_history  ; use readline history if available

; --- Program Definitions ---

[program:calculation-engine]
command=/app/calculation_service
directory=/app
user=appuser
autostart=true
autorestart=true
stopwaitsecs=10          ; Max seconds to wait for process to exit before SIGKILL (default 10)
stopasgroup=true         ; Send stop signal to the process group (default false)
killasgroup=true         ; Send SIGKILL to the process group (default false)
stdout_logfile=/var/log/supervisor/calc_engine_stdout.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=5
stderr_logfile=/var/log/supervisor/calc_engine_stderr.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=5
environment=DEBUG="1",PORT="8081",MEGA_EMAIL="%(ENV_MEGA_EMAIL)s",MEGA_PWD="%(ENV_MEGA_PWD)s",MEGA_METRICS_FOLDER_PATH="%(ENV_MEGA_METRICS_FOLDER_PATH)s",LOG_LEVEL="debug"

[program:metrics-generator]
command=/app/metrics_generator
directory=/app
user=appuser
autostart=true
autorestart=true
stopwaitsecs=10
stopasgroup=true
killasgroup=true
stdout_logfile=/var/log/supervisor/metrics_gen_stdout.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=5
stderr_logfile=/var/log/supervisor/metrics_gen_stderr.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=5
environment=MEGA_EMAIL="%(ENV_MEGA_EMAIL)s",MEGA_PWD="%(ENV_MEGA_PWD)s",MEGA_METRICS_FOLDER_PATH="%(ENV_MEGA_METRICS_FOLDER_PATH)s"

; Optional: If you had a web server like Nginx or Caddy also managed by supervisor
; [program:webserver]
; command=/usr/sbin/nginx -g "daemon off;"
; autostart=true
; autorestart=true
; ...